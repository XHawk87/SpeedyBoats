plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
    id 'xyz.jpenilla.run-paper' version '2.3.0'
}

group = 'de.sivery.speedyboats'
version = '1.3.1'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven { url = "https://s01.oss.sonatype.org/content/repositories/snapshots" }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url = "https://repo.codemc.org/repository/maven-public/" }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.20.6-R0.1-SNAPSHOT'
    testImplementation 'io.papermc.paper:paper-api:1.20.6-R0.1-SNAPSHOT'

//    implementation 'dev.jorel:commandapi-bukkit-shade:9.4.0-SNAPSHOT'
//    testImplementation 'dev.jorel:commandapi-bukkit-shade:9.4.0-SNAPSHOT'

    implementation "net.kyori:adventure-api:4.16.0"
    testImplementation "net.kyori:adventure-api:4.16.0"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    testImplementation 'org.mockito:mockito-core:5.10.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.10.0'

//    implementation 'com.mojang:brigadier:1.0.18'
//    testImplementation 'com.mojang:brigadier:1.0.18'
}

shadowJar {
    dependencies {
//        include dependency("dev.jorel:commandapi-bukkit-shade:9.4.0-SNAPSHOT")
    }
//    relocate("dev.jorel.commandapi", "uk.co.hawks_haven.commandapitest.shaded.dev.jorel.commandapi")
}

test {
    useJUnitPlatform()
}

tasks {
    runServer {
        doFirst {
            var cfg = runDirectory.get().asFile.resolve("plugins/bStats/config.yml")
            if (!cfg.exists()) {
                cfg.parentFile.mkdirs()
                cfg.writeText("enabled: false\n")
            }
        }
        dependsOn test
        minecraftVersion("1.20.6")
        jvmArgs("-Dcom.mojang.eula.agree=true")
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}
